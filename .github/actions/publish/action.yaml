name: 'Publish Module'
description: 'Publishes and updates module in ACR'
inputs:
  moduleFilePath:
    description: 'Path to the module file'
    required: true
  versionFilePath:
    description: 'Path to the version file'
    required: true
  repoName:
    description: 'Repository name'
    required: true
  registryName:
    description: 'Registry name'
    required: true

runs:
  using: 'composite'
  steps:
        
    - name: Update/check version on module
      run: |
        ./scripts/module-version.ps1 -registryName ${{ inputs.registryName }} -repositoryName ${{ inputs.repoName }} -versionPath ${{ inputs.versionFilePath }}
      shell: pwsh

    # # Check if the new version already exist in the ACR
    # - name: Check if version exists in ACR
    #   id: check_version
    #   run: |
    #     existingTags=$(az acr repository show-tags --name ${{ inputs.registryName }} --repository ${{ inputs.repoName }} --orderby time_desc --output tsv)
    #     echo $existingTags
    #     echo "newVersion=${{ inputs.newVersion }}"
    #     if echo "$existingTags" | grep -qw "${{ env.newVersion }}"; then
    #       echo "exists=true" >> $GITHUB_ENV
    #     else
    #       echo "exists=false" >> $GITHUB_ENV
    #     fi
    #   shell: bash

    
    # Publish if the new version is not in ACR
    - name: Publish module
      run: |
        az bicep publish --target 'br:${{ inputs.registryName }}.azurecr.io/${{ inputs.repoName }}:${{ env.newVersion }}' --file ${{ inputs.moduleFilePath }}
      shell: bash

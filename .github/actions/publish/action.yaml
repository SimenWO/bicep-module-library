name: 'Publish Module'
description: 'Publishes and updates module in ACR'
inputs:
  moduleFilePath:
    description: 'Path to the module file'
    required: true
  versionFilePath:
    description: 'Path to the version file'
    required: true
  repoName:
    description: 'Repository name'
    required: true
  registryName:
    description: 'Registry name'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Update/check version on module
      run: |
        $version = "./scripts/module-version.ps1 -registryName ${{ inputs.registryName }} -repositoryName ${{ inputs.repoName }} -versionPath ${{ inputs.versionFilePath }}"
        echo "newVersion=$newVersion" >> $env:GITHUB_ENV
      shell: pwsh

    # Fallback for non-existing repositories, if necessary
    # This step assumes the newVersion has been set by the PowerShell script
    - name: Set default version if not set
      run: |
        if [ -z "${{ env.newVersion }}" ]; then
          echo "newVersion=0.1.0" >> $GITHUB_ENV
          echo "Fallback to default version: 0.1.0"
        else
          echo "Proceeding with version: ${{ env.newVersion }}"
        fi
      shell: bash

    
    # Publish if the new version is not in ACR
    - name: Publish module
      run: |
        az bicep publish --target 'br:${{ inputs.registryName }}.azurecr.io/${{ inputs.repoName }}:${{ env.newVersion }}' --file ${{ inputs.moduleFilePath }}
      shell: bash
